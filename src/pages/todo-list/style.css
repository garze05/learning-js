#todoForm{
  margin-bottom: 1.2rem;
}

/* Mensaje CTA para agregar primer tarea */
#addFirstTaskContainer {
  display: flex;
  justify-content: center;
  flex-flow: row nowrap;
}

#filterContainer{
  text-align: left;
  margin-top: 1rem;
}

#todoInput{
  width: 300px;
}

#filterContainer label {
  margin-right: 0.5rem;
  font-size: 1.2rem;
}

/* Contenedores para las tareas */
#todoList, #completedList {
  /* background-color: #fff; */
  /* box-shadow: 0 2px 4px rgba(0,0,0,0.1); */
  max-height: 300px;
  list-style-type: none;
  overflow-y: auto;
  text-align: left;
  padding: 1rem;
  padding-left: 2rem;
  border-radius: 8px;
  margin: 0;
}

/* Cards de cada tarea en si */
#todoList li, #completedList li {
  display: grid;
  grid-template-columns: .2fr 1fr .2fr .2fr;
  align-items: center;
  padding: 0.5rem;
  margin: 0.5rem 0;
  border-radius: 8px;
  border: 2px solid var(--dark-color);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  background-color: #fff;
  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;
}

/* Al remover tarea */
#todoList li.removing, #completedList li.removing {
  transform: translateX(-100%);
  animation: fadeOut .5s forwards ease;
}

/* Mover tareas CSS */
/* #todoList li, #completedList li {
  cursor: grab;
  cursor: -webkit-grab;
  cursor: -moz-grab;
}

#todoList li:active, #completedList li:active {
  cursor: grabbing;
  cursor: -webkit-grabbing;
  cursor: -moz-grabbing;
} */

#upperControls {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
}

.task-content {
  display: flex;
  flex-direction: column;
}

select {
  padding: 0.5rem;
  font-size: 1rem;
  border: 2px solid var(--dark-color);
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  background-color: var(--primary-color);
  cursor: pointer;
}

option {
  background-color: #fff;
}

/* Solo los botones de los tasks */
li button {
  margin: 0 auto;
  height: 1.8rem;
  width: 1.8rem;
  background-size: contain; /* Asegura que el SVG se escale correctamente */
  border: none;
  background: none;
  cursor: pointer;
  padding: 0.5rem;
  text-decoration: none;
  box-shadow: none;
  transition: 
    transform 0.2s ease-in-out;
}

li button:hover {
  background-color: #fff;
  transform: translateY(-5px);
}

span{
  font-size: 1.5rem;
  margin-right: 0.5rem;
  display: flex;
  justify-content: left;
}

input[type="checkbox"]{
  margin: 0 auto;
  cursor: pointer;
  /*tama√±o*/
  width: 1.8rem;
  height: 1.8rem;
  transition: transform 0.2s ease;
}

input[type="checkbox"]:hover{
  transform: scale(1.2);
}

.btnDelete {
  background: url('/trash.svg') no-repeat center center;
  color: #ff0000;
}

.btnEdit {
  color: var(--hover-color);
  background: url('/edit.svg') no-repeat center center;

}

.btnChangeDateTime {
  background: url('/time.svg') no-repeat center center;
}

.date {
  font-size: 0.8rem;
  color: #666;
  margin-top: 0;
}

.completed {
  text-decoration: line-through;
  color: #ccc;
}

/* Animations */

/* Move from current position down to ~center of screen */
@keyframes moveDownCenter {
  0% {
    transform: translateY(0);
  }
  100% {
    /* Adjust 40vh as desired for "center" */
    transform: translateY(20vh);
  }
}

/* Move from ~center of screen back up to original position */
@keyframes moveUpOriginal {
  0% {
    /* Match ending position of moveDownCenter */
    transform: translateY(20vh);
  }
  100% {
    transform: translateY(0);
  }
}

.element-down {
  animation: moveDownCenter .5s forwards ease;
}

.element-up {
  animation: moveUpOriginal .5s forwards ease;
}